error: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.
 --> $DIR/ptr_arg.rs:6:14
  |
6 | fn do_vec(x: &Vec<i64>) {
  |              ^^^^^^^^^ help: change this to: `&[i64]`
  |
  = note: `-D ptr-arg` implied by `-D warnings`

error: writing `&String` instead of `&str` involves a new object where a slice will do.
  --> $DIR/ptr_arg.rs:14:14
   |
14 | fn do_str(x: &String) {
   |              ^^^^^^^ help: change this to: `&str`

error: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.
  --> $DIR/ptr_arg.rs:27:18
   |
27 |     fn do_vec(x: &Vec<i64>);
   |                  ^^^^^^^^^ help: change this to: `&[i64]`

error: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.
  --> $DIR/ptr_arg.rs:40:14
   |
40 | fn cloned(x: &Vec<u8>) -> Vec<u8> {
   |              ^^^^^^^^
   |
help: change this to
   |
40 | fn cloned(x: &[u8]) -> Vec<u8> {
   |              ^^^^^
help: change `x.clone()` to
   |
41 |     let e = x.to_owned();
   |             ^^^^^^^^^^^^
help: change `x.clone()` to
   |
46 |     x.to_owned()
   |     ^^^^^^^^^^^^

error: writing `&String` instead of `&str` involves a new object where a slice will do.
  --> $DIR/ptr_arg.rs:49:18
   |
49 | fn str_cloned(x: &String) -> String {
   |                  ^^^^^^^
   |
help: change this to
   |
49 | fn str_cloned(x: &str) -> String {
   |                  ^^^^
help: change `x.clone()` to
   |
50 |     let a = x.to_string();
   |             ^^^^^^^^^^^^^
help: change `x.clone()` to
   |
51 |     let b = x.to_string();
   |             ^^^^^^^^^^^^^
help: change `x.clone()` to
   |
56 |     x.to_string()
   |     ^^^^^^^^^^^^^

error: writing `&String` instead of `&str` involves a new object where a slice will do.
  --> $DIR/ptr_arg.rs:59:20
   |
59 | fn sub_function(x: &String) {
   |                    ^^^^^^^ help: change this to: `&str`
   |
note: You will also need to change the function called here
  --> $DIR/ptr_arg.rs:60:13
   |
60 |     let _ = str_cloned(x);
   |             ^^^^^^^^^^^^^

error: writing `&String` instead of `&str` involves a new object where a slice will do.
  --> $DIR/ptr_arg.rs:63:44
   |
63 | fn false_positive_capacity(x: &Vec<u8>, y: &String) {
   |                                            ^^^^^^^
   |
help: change this to
   |
63 | fn false_positive_capacity(x: &Vec<u8>, y: &str) {
   |                                            ^^^^
help: change `y.clone()` to
   |
65 |     let b = y.to_string();
   |             ^^^^^^^^^^^^^
help: change `y.as_str()` to
   |
66 |     let c = y;
   |             ^

